@generated
!@#$%codegentest:testAsync
async function genFoo() {
}

!@#$%codegentest:testDocBlockCommentsWrap
/**
 * xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
 * (Generated from EntTestSchema)
 */
function getName(): string {
  return $name;
}

!@#$%codegentest:testLongParamParamNamesAddCommasButNotToVariadics
function addPerson(
  string $first_name_is_a_param_with_a_very_long_name_to_trigger_the_reformat,
  string ...$sur_name_is_a_param_with_a_very_long_name_to_trigger_the_reformat
) {
}

!@#$%codegentest:testManualSection
function genProprietorName(): string {
  /* BEGIN MANUAL SECTION genProprietorName */
  // insert your code here
  /* END MANUAL SECTION */
}

!@#$%codegentest:testMemoize
<<__Memoize>>
function getExpensive() {
}

!@#$%codegentest:testMixedBuiltInAndUserAttributes
<<__Override, DataProvider('providerFunc'), TestsBypassVisibility>>
public function getOverridedBypassVisibilityAndUseDataProvider() {
}

!@#$%codegentest:testMixedBuiltInAndUserAttributesAsync
<<__Override, DataProvider('providerFunc'), TestsBypassVisibility>>
public async function genOverridedBypassVisibilityAndUseDataProvider() {
}

!@#$%codegentest:testMixedUserAttributes
<<DataProvider('providerFunc'), TestsBypassVisibility>>
function getBypassVisibilityAndUseDataProvider() {
}

!@#$%codegentest:testOverride
<<__Override>>
public function getNotLikeParent() {
}

!@#$%codegentest:testOverrideAndMemoized
<<__Override, __Memoize>>
public function getExpensiveNotLikeParent() {
}

!@#$%codegentest:testOverrideMemoizedAsync
<<__Override, __Memoize>>
public async function genExpensiveNotLikeParent() {
}

!@#$%codegentest:testParams
function getName(string $name) {
  return $name . $name;
}

!@#$%codegentest:testSimpleGetter
/**
 * Return the name of the user.
 */
function getName(): string {
  return $name;
}

!@#$%codegentest:testSingleUserAttributeWithArgument
<<DataProvider('providerFunc')>>
function getUseDataProvider() {
}

!@#$%codegentest:testSingleUserAttributeWithoutArgument
<<TestsBypassVisibility>>
function getTestsBypassVisibility() {
}

!@#$%codegentest:testVariadicParamDoesntAddComma
function addNames(
  string ...$names_is_a_variadic_with_a_very_long_name_to_trigger_the_reformat
) {
}

